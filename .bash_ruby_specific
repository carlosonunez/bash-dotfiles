#!/usr/bin/env bash
#vi: set ft=bash:
# Colors are loaded earlier and from elsewhere
# shellcheck disable=SC2154
RUBY_VERSION_TO_USE=3.2.2
RUBY_CHECK_SENTINEL_FILE=/tmp/ruby_installation_in_progress
RUBY_GEMFILE="$HOME/.config/ruby/Gemfile"

ruby_check_mutex_lock() {
  echo -ne $$ >> "$RUBY_CHECK_SENTINEL_FILE"
}

ruby_check_mutex_unlock() {
  rm -f "$RUBY_CHECK_SENTINEL_FILE"
}

installation_is_locked() {
  random_wait_time=$(bc -l <<< "scale=4 ; ${RANDOM}/32767")
  sleep "$random_wait_time" && test -e "$RUBY_CHECK_SENTINEL_FILE"
}

get_bash_process_holding_lock() {
  cat "$RUBY_CHECK_SENTINEL_FILE"
}

remove_dead_install_locks() {
  bash_processes_holding_lock() {
    pgrep -q "$(get_bash_process_holding_lock)"
  }
  if installation_is_locked
  then
    if ! bash_processes_holding_lock
    then
      ruby_check_mutex_unlock
    fi
  fi
}

install_bundler() {
  which bundle &> /dev/null || gem install bundler
}

install_gems()  {
  if ! test -L "$RUBY_GEMFILE"
  then
    rm -f "$RUBY_GEMFILE" &&
      mkdir -p "$(dirname "$RUBY_GEMFILE")" &&
      ln -s "$HOME/src/setup/Gemfile" "$RUBY_GEMFILE"
  fi
  if ! nc -w 1 rubygems.org 443
  then
    log_warning "No internet connection detected or connection is slow. \
System Ruby gems will not be updated."
  else
    bundle install --gemfile="$RUBY_GEMFILE" --quiet --jobs=10
  fi
}

asdf list ruby | grep -q "$RUBY_VERSION_TO_USE" || asdf install ruby "$RUBY_VERSION_TO_USE"
asdf global ruby "$RUBY_VERSION_TO_USE"
export ASDF_RUBY_VERSION="$RUBY_VERSION_TO_USE"
export PATH="$(asdf where ruby)/bin:$PATH"
remove_dead_install_locks
if installation_is_locked
then
  log_info "Ruby installation in progress in another window."
fi
ruby_check_mutex_lock
trap 'rc=$?; ruby_check_mutex_unlock; exit $rc' INT HUP EXIT
install_bundler &&
install_gems &&
trap '-' INT HUP EXIT
