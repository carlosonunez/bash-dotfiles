#!/usr/bin/env bash
print_cscope_file_list() {
  find . -name "*.bash" -o \
    -name "*.bats" -o \
    -name "*.sh" -o \
    -name "*.go" -o \
    -name "*.java" -o \
    -name "*.rb" -o \
    -name "*.py" -o \
    -name "*.c" -o \
    -name "*.h" -o  \
    -name "*.cpp" -o \
    -name "*.js" -o \
    -name "*.ts"
}

cscope_hook() {
  cscope_db_file="${PWD}/cscope.out"
  cscope_filelist="${PWD}/cscope.files"
  nocscope_file="${PWD}/.nocscope"
  if test -e "$nocscope_file"
  then
    if test -e "$PWD/cscope*"
    then
      log_info "Removing cscope files, as requested"
      rm -rf "$PWD/cscope*"
    fi
    return 0
  fi

  test "$(2>/dev/null git rev-parse --is-inside-work-tree)" == "true" || return 0
  test -n "$(2>/dev/null git stash list)" || return 0
  test -e "$cscope_db_file" && return 0
  if ! test -e "$cscope_filelist"
  then
    log_info "Building cscope file list. Please wait."
    print_cscope_file_list > "$cscope_filelist"
  fi
  log_info "Generating cscope database. Please wait."
  cscope -R -b -q -k
  if ! test -e "$PWD/.gitignore" || ! grep -iq 'cscope.*' "$PWD/.gitignore"
  then
    log_info "Adding cscope files to gitignore. Please wait."
    echo 'cscope.*' >> "$PWD/.gitignore"
  fi
}

ctags_hook() {
  ctags_prefs="$HOME/.ctags"
  ctags_file="$PWD/tags"
  no_ctags_file="$PWD/.noctags"
  test "$(2>/dev/null git rev-parse --is-inside-work-tree)" == "true" || return 0
  test -n "$(2>/dev/null git stash list)" || return 0
  if test -e "$no_ctags_file"
  then
    if test -e "$ctags_file"
    then
      log_info "Removing ctags, as requested"
      rm -rf "$ctags_file"
    fi
    return 0
  fi
  if ! test -e "$ctags_prefs"
  then
    log_info "Generating ctags prefs. Please wait."
    cat >"$ctags_prefs" <<-EOF
--recurse=yes
--exclude=.git
--exclude=.github
--exclude=*.gpg
--exclude=.DS_Store
--exclude=node_packages
--exclude=gocache
--exclude=go.mod
--exclude=go.sum
--exclude=vendor
--langdef=Go
--langmap=Go:.go
--regex-Go=/func([ \t]+\([^)]+\))?[ \t]+([a-zA-Z0-9_]+)/\2/d,func/
--regex-Go=/var[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/d,var/
--regex-Go=/type[ \t]+([a-zA-Z_][a-zA-Z0-9_]+)/\1/d,type/
EOF
  fi
  if ! test -e "$ctags_file"
  then
    log_info "Generating ctags. Please wait."
    ctags -R
  fi
  if ! test -e "$PWD/.gitignore" || ! grep -Eiq '^tags$' "$PWD/.gitignore"
  then
    log_info "Adding tags to gitignore. Please wait."
    echo 'tags' >> "$PWD/.gitignore"
  fi
}

update_vim_bundles() {
  for bundle_repo in $VIM_BUNDLE_REPOS
  do
    log_info "Updating '$bundle_repo'"
    dir="$HOME/.vim/bundle/$(basename $bundle_repo)"
    pushd "$dir" && git pull --quiet && popd
  done
}

VIM_BUNDLE_REPOS=$(cat <<GITHUB_URLS
907th/vim-auto-save
AndrewRadev/linediff.vim
Chiel92/vim-autoformat
PProvost/vim-ps1
Xuyuanp/nerdtree-git-plugin
cespare/vim-toml
chaquotay/ftl-vim-syntax
chr4/nginx.vim
claco/jasmine.vim
ctrlpvim/ctrlp.vim
ctrlpvim/ctrlp.vim
dense-analysis/ale
dhruvasagar/vim-table-mode
fatih/vim-go
flazz/vim-colorschemes
hashivim/vim-terraform
junegunn/vim-easy-align
junegunn/vim-emoji
lambdalisue/battery.vim
leafgarland/typescript-vim
markcornick/vim-bats
martinda/Jenkinsfile-vim-syntax
othree/javascript-libraries-syntax.vim
pangloss/vim-javascript
pedrohdz/vim-yaml-folds
plasticboy/vim-markdown
preservim/vimux
rlue/vim-fold-rspec
romainl/vim-cool
ryanoasis/vim-devicons
scrooloose/nerdtree
thoughtbot/vim-rspec
tpope/vim-classpath
tpope/vim-fugitive.git
tpope/vim-unimpaired
vim-airline/vim-airline
vim-airline/vim-airline-themes
vim-scripts/groovy.vim
vim-test/vim-test
will133/vim-dirdiff
yuratomo/w3m.vim
zivyangll/git-blame.vim
GITHUB_URLS
)

for bundle_repo in $VIM_BUNDLE_REPOS
do
  if [ ! -f ~/.vim/bundle ]
  then
    mkdir -p ~/.vim/bundle
  fi
  if [ ! -d "$HOME/.vim/bundle/$(basename $bundle_repo)" ]
  then
    git clone "https://github.com/$bundle_repo" "$HOME/.vim/bundle/$(basename "$bundle_repo")"
  fi
done
