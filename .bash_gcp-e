#!/usr/bin/env bash
GCP_DOCKER_IMAGE=google/cloud-sdk:alpine
OAUTH2L_DOCKER_IMAGE=gcr.io/oauth2l/oauth2l

exec_gcloud() {
  COMMAND="$(which docker) run --rm -i -v $HOME/.config/gke:/root/.kube -v /tmp:/tmp \
   -v  $PWD:/app -w /app -v /tmp:/tmp -v  \
   $HOME/.config/gcloud:/root/.config/gcloud $GCP_DOCKER_IMAGE gcloud"
  update_any_new_kubeconfigs_to_use_dockerized_gcloud() {
    kubeconfig="$HOME/.config/gke/config"
    if test -f "$kubeconfig" && grep -q "google-cloud-sdk" "$kubeconfig"
    then
      >&2 echo "===> Updating GKE Kubeconfig to use gcloud in Docker"
      command_bin=$(gsed -E 's#^(\S+) .*#\1#' <<< "$COMMAND")
      command_args=$(gsed -E 's#^\S+ (.*)#\1#' <<< "$COMMAND")
      gsed -Ei "s#cmd-args: (.*)#cmd-args: $command_args \1#" "$kubeconfig"
      gsed -Ei "s#cmd-path: .*#cmd-path: $command_bin#" "$kubeconfig"
    fi
  }

 $COMMAND "$@"
 update_any_new_kubeconfigs_to_use_dockerized_gcloud
}

test -d "$HOME/.config/gke" || mkdir -p "$HOME/.config/gke"
alias gcloud=exec_gcloud
alias gsutil="docker run --rm -i -v /tmp:/tmp -v  $PWD:/app -w /app -v /tmp:/tmp -v  $HOME/.config/gcloud:/root/.config/gcloud $GCP_DOCKER_IMAGE gsutil"
alias oauth2l="docker run --rm -i -v /tmp:/tmp -v  $PWD:/app -w /app $OAUTH2L_DOCKER_IMAGE"
alias gkubectl="kubectl --kubeconfig=$HOME/.config/gke/config"
complete -F _complete_alias gkubectl
complete -F _complete_alias gcloud
