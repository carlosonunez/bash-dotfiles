[[ ! -f "/etc/init.d/docker" ]] && {
  printf "Installing ${BGreen}docker${NC}\n"
  case "$(get_os_type)" in
    "Darwin")
      install_application "docker"
      ;;
    "Ubuntu"|"Debian")
      install_application "apt-transport-https ca-certificates curl"
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository \
         "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
         $(lsb_release -cs) \
         stable"
      sudo apt-get update
      install_application "linux-image-extra-$(uname -r) linux-image-extra-virtual"
      install_application "docker-ce"
      ;;
    *)
      printf "${BRed}ERROR${NC}: You haven't written a Docker installation routine for this OS yet. Do it now!\n"
      return 1
  esac
  docker run hello-world
}

[[ ! -f /etc/bash_completion.d/docker ]] && {
  URL="https://raw.githubusercontent.com/docker/docker/master/contrib/completion/bash/docker "
  sudo bash -c "curl -L $URL > /etc/bash_completion.d/docker"
}

[[ "$( cat /proc/version | grep -q 'Microsoft' && echo $? )" -eq "0" ]] && {
  printf "${BYellow}INFO${NC}: Connecting Docker-Windows engine to native Linux session\n"
  export DOCKER_HOST=tcp://0.0.0.0:2375
}

