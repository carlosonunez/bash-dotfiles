# vi: set ft=sh:
LIMA_MACHINE_PATH_DOCKER="${LIMA_MACHINE_PATH_DOCKER:-$HOME/src/setup/lima-machines/docker.yaml}"
LIMA_MACHINE_NAME_DOCKER="${LIMA_MACHINE_NAME_DOCKER:-docker-machine}"
DOCKER_DISABLED="${DOCKER_DISABLED:-false}"

docker_disabled() {
  grep -Eiq '^true$' <<< "$DOCKER_DISABLED"
}

force_create_docker_machine() {
  test -n "$FORCE_CREATE_DOCKER_MACHINE"
}

docker_aliased_to_podman() {
  test -n "$DOCKER_ALIASED_TO_PODMAN"
}

docker_machine_created() {
  test -e "$HOME/.config/docker_machine_created"
}

mark_docker_machine_created() {
  touch "$HOME/.config/docker_machine_created"
}

docker_install_mutex_lock() {
  printf $$ >> /tmp/docker_install_mutex
}

docker_install_mutex_unlock() {
  rm -f /tmp/docker_install_mutex
}

docker_installation_locked() {
  test -e /tmp/docker_install_mutex
}

create_lima_machine() {
  stop_docker_machine
  sed "s;%TEMPDIR%;${TMPDIR:-/tmp};g" "$LIMA_MACHINE_PATH_DOCKER" |
    limactl create --tty=false --name="$LIMA_MACHINE_NAME_DOCKER" -
}

start_lima_machine() {
  limactl start "$LIMA_MACHINE_NAME_DOCKER"
}

add_lima_machine_as_docker_connection() {
  docker context create "lima-${LIMA_MACHINE_NAME_DOCKER}" \
    --docker "host=unix://$HOME/.lima/docker.sock"
  docker context update "lima-${LIMA_MACHINE_NAME_DOCKER}"
}

test_docker_connection() {
  docker run --rm hello-world
}

stop_docker_machine() {
  limactl ls -q | grep "$LIMA_MACHINE_NAME_DOCKER"  | xargs limactl rm -f
}

start_docker_machine() {
  if docker_disabled && ! force_create_docker_machine
  then
    log_warning "Docker is disabled on this machine (add FORCE_CREATE_DOCKER_MACHINE=true to override)"
    return 1
  fi
  if docker_installation_locked
  then
    log_info "docker is being installed in another pane."
    return 0
  fi
  docker_install_mutex_lock
  if ! (
    set -eo pipefail
    if ! docker_machine_created || test -n "$RECREATE_LIMA_MACHINE_DOCKER"
    then
      create_lima_machine 
      add_lima_machine_as_docker_connection
      mark_docker_machine_created
    fi
    start_lima_machine
    test_docker_connection
    docker_machine_created
    docker_install_mutex_unlock
  )
  then docker_install_mutex_unlock && return 1
  fi
}

if docker_disabled && ! docker_aliased_to_podman
then
  message="Docker is disabled on this system and will not be started; run FORCE=true start_docker_machine to override."
  stop_docker_machine
  log_warning "[docker] $message"
  alias docker="echo \$message; false"
  return 0
fi
if docker_aliased_to_podman
then
  stop_docker_machine
  log_info "[docker] Aliasing to Podman (run FORCE_CREATE_DOCKER_MACHINE=true start_docker_machine to override)"
  alias docker=podman
  return 0
fi
start_docker_machine
