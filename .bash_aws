linux_box_ip_addr="ec2-52-87-91-75.compute-1.amazonaws.com"
linux_box_dev_key="$HOME/.ssh/AWSDevelopmentMachines.pem"
windows_box_ip_addr="ec2-52-87-127-75.compute-1.amazonaws.com"
windows_box_dev_key="$HOME/.ssh/AWSWindowsMachines.pem"

reload_security_groups() {
  region=$(echo $1)
  [[ -z "$region" ]] && region="us-east-1"
  ssh_sg=$(aws ec2 describe-security-groups --filter "Name=group-name,Values=default-ssh-access-policy" --query "SecurityGroups[*].GroupId" --output text --region $region)
  rdp_sg=$(aws ec2 describe-security-groups --filter "Name=group-name,Values=default-rdp-policy" --query "SecurityGroups[*].GroupId" --output text --region $region)
  [[ -z "$ssh_sg" || -z "$rdp_sg" ]] && {
    echo "Default SSH or RDP security groups have not been created yet. Create them, then try this again."
  } || {
    this_ip="$(curl http://ipinfo.io/ip 2>/dev/null )"
    last_ssh_ip_granted=$(aws ec2 describe-security-groups --group-id $ssh_sg --query "SecurityGroups[*].IpPermissions[0].IpRanges[0].CidrIp" --output text --region $region | tr "\t" "\n") last_rdp_ip_granted=$(aws ec2 describe-security-groups --group-id $rdp_sg --query "SecurityGroups[*].IpPermissions[0].IpRanges[0].CidrIp[]" --output text --region $region | tr "\t" "\n")
    for ip in $last_ssh_ip_granted; do
      aws ec2 revoke-security-group-ingress --group-id $ssh_sg --ip-permissions "IpProtocol=tcp,FromPort=22,ToPort=22,IpRanges=[{CidrIp=$ip}]" && \
      sleep 2 && \
      echo "[ssh] REMOVED: $ip"
    done
    aws ec2 authorize-security-group-ingress --group-id $ssh_sg --ip-permissions "IpProtocol=tcp,FromPort=22,ToPort=22,IpRanges=[{CidrIp=$this_ip/32}]"
    
    for ip in $last_rdp_ip_granted; do
      aws ec2 revoke-security-group-ingress --group-id $rdp_sg --ip-permissions "IpProtocol=tcp,FromPort=3389,ToPort=3389,IpRanges=[{CidrIp=$ip}]" && \
      sleep 2 && \
      echo "[rdp] REMOVED: $ip"
    done
    aws ec2 authorize-security-group-ingress --group-id $rdp_sg --ip-permissions "IpProtocol=tcp,FromPort=3389,ToPort=3389,IpRanges=[{CidrIp=$this_ip/32}]"

  }
}

connect_to_dev_box() {
  instance_state=$(aws ec2 describe-instance --filter "Name=public-dns-name,Values=$linux_box_ip_addr" --query "Reservations[*].Instances[*].State[].[Name]" --output text)
  [[ "$instance_state" != "running" ]] && {
    echo "Starting dev box. Hang on a minute."
    aws ec2 start-instances --instance-id $(aws ec2 describe-instance --filter "Name=public-dns-name,Values=$linux_box_ip_addr" --query "Reservations[*].Instances[*].InstanceId" --output text) && \
      sleep 60
  }
  ssh -i $linux_box_dev_key ubuntu@$linux_box_ip_addr
}
