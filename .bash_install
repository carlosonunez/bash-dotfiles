PYTHON_VERSION=3.6.5
VIRTUAL_ENV_NAME=carlosnunez
export PYENV_ROOT=/usr/local/var/pyenv

# We need to install OS headers if running in OS X Mojave
# =======================================================
if uname | grep -Eq "^Darwin$" && \
  defaults read loginwindow SystemVersionStampAsString | grep -Eq "^10.14" && \
  ! pkgutil --pkgs | grep -Eq "com.apple.pkg.macOS_SDK_headers_for_macOS_10.14"
then
  >&2 echo "INFO: OS X Mojave detected. Installing OS headers \
as required by pyenv"
  sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
fi

# Install Python and set it to the version
# specified above unless we've set it to latest
# ===============================================
if ! which python python3 >/dev/null
then
  if [ "$(get_os_type)" == "Ubuntu" ]
  then
    sudo apt-get update
  fi
  if ! {
    install_application "python";
    install_application "pyenv";
  }
  then
    >&2 echo "ERROR: Couldn't install Python."
    return 1
  fi
fi

if [ "$PYTHON_VERSION" != "latest" ] && \
  [ ! -d "$PYENV_ROOT/versions/$PYTHON_VERSION" ]
then
  echo "INFO: Installing Python version $PYTHON_VERSION"
  pyenv install "$PYTHON_VERSION"
fi

# Ensure that user-installed binaries are in our path.
# =====================================================
PYTHON3_LOCAL_DIR=$(echo $(python3 -c "import site; print(site.USER_BASE)")/bin)

# Install pip
# ===========
if ! which pip3 &> /dev/null
then
  if ! {
    >&2 echo "INFO: Installing pip3. Hang on." &&
    curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py &&
    sudo python /tmp/get-pip.py;
  }
  then
    >&2 echo "ERROR: Couldn't install pip. Install it manually, then try again."
    return 1
  fi
fi

# Activate the venv
# ==================
if [ -z "$VIRTUAL_ENV" ] && [ ! -f "$PYTHON3_LOCAL_DIR/virtualenv" ]
then
  if ! pip3 install --user virtualenv
  then
    >&2 echo "ERROR: Couldn't install Python virtualenv."
    return 1
  fi
fi
if [ ! -d "$HOME/$VIRTUAL_ENV_NAME/bin" ]
then
  if [ "$PYTHON_VERSION" != "latest" ]
  then
    $PYTHON3_LOCAL_DIR/virtualenv -p "$PYENV_ROOT/versions/$PYTHON_VERSION/bin/python" "$VIRTUAL_ENV_NAME"
  else
    $PYTHON3_LOCAL_DIR/virtualenv "$VIRTUAL_ENV_NAME"
  fi
fi
source $HOME/$VIRTUAL_ENV_NAME/bin/activate

# Install pygments
# ================
if [ "$(get_os_type)" != "Darwin" ]
then
  which pygmentize > /dev/null || {
    pip3 install pygments
    install_application "highlight"
  }
fi

# Install a few necessary brew formulae
# ======================================
installed_applications=$(brew list --full-name; brew cask list --full-name 2>/dev/null)
installed_pips=$(pip freeze)
[ "$(uname)" == "Darwin" ] && {
  builtin=$(echo "htop,tmux,jq,feh,w3m,reattach-to-user-namespace,tree,mas" | tr "," "\n")
  casks=$(echo "firefox,shiftit,iterm2,slack,1password,authy,xquartz," | tr "," "\n")
  pips=$(echo "rtv,googler" | tr "," "\n")
  mas_apps=$(echo "spark,shush" | tr "," "\n")
  for pkg in $builtin; do
    if ! $(echo "$installed_applications" | grep -q "$pkg")
    then
      echo "INFO: Installing: $pkg"
      install_application "$pkg"
    fi
  done
  for pkg in $casks; do
    if ! $(echo "$installed_applications" | grep -q "$pkg")
    then
      echo "INFO: Installing: $pkg"
      install_application "Caskroom/cask/$pkg"
    fi
  done
  for pkg in $pips
  do
    if ! which "$pkg" &>/dev/null
    then
      pip3 install "$pkg"
    fi
  done
  for pkg in $mas_apps
  do
    if ! mas list | grep -q "$pkg"
    then
      mas lucky "$pkg"
    fi
  done
}

# Export a few handy exports
# ==========================
alias googler='googler --url-handler w3m'
